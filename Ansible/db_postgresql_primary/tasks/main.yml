---
# ===================================
# Block with Primary PostgreSQL tasks
# ===================================

# Adding secret variables
- name: Step 1 - Adding secret variables
  include_vars: "{{ playbook_dir }}/common_files/ansible_secrets.yaml"
  tags:
    - primary_postgresql_setup_adding_secret_variables

# Stopping the PostgreSQL service
- name: Step 2 - Stopping the PostgreSQL service
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: stopped
  tags:
    - primary_postgresql_setup_stopping_postgresql_service

# Adding permissions to pg_hba.conf for connecting to the primary PostgreSQL
- name: Step 3 - Adding permissions to pg_hba.conf for connecting to the primary PostgreSQL
  become: true
  become_user: postgres
  blockinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    block: |
      host my_wiki       wikiuser       77.137.79.100/32           scram-sha-256
      host my_wiki       wikiuser       212.179.174.196/32           scram-sha-256
      host my_wiki       wikiuser       {{ hostvars['vm-1-monitoring-system'].ansible_host }}/32          scram-sha-256
      host my_wiki       wikiuser       192.168.10.11/32           scram-sha-256    
      host my_wiki       wikiuser       {{ hostvars['vm-3-mediawiki-server-1'].ansible_host }}/32          scram-sha-256    
      host my_wiki       wikiuser       192.168.10.13/32           scram-sha-256
      host my_wiki       wikiuser       {{ hostvars['vm-4-mediawiki-server-2'].ansible_host }}/32          scram-sha-256    
      host my_wiki       wikiuser       192.168.10.14/32           scram-sha-256
      host my_wiki       wikiuser       {{ hostvars['vm-5-haproxy-proxy-server'].ansible_host }}/32          scram-sha-256    
      host my_wiki       wikiuser       192.168.10.15/32           scram-sha-256
      host my_wiki       wikiuser       {{ hostvars['vm-6-primary-db'].ansible_host }}/32          scram-sha-256    
      host my_wiki       wikiuser       192.168.10.16/32           scram-sha-256
      host my_wiki       wikiuser       {{ hostvars['vm-7-standby-db'].ansible_host }}/32          scram-sha-256
      host my_wiki       wikiuser       192.168.10.17/32           scram-sha-256
      host replication   syncuser       77.137.79.100/32           scram-sha-256
      host replication   syncuser       212.179.174.196/32           scram-sha-256     
      host replication   syncuser       {{ hostvars['vm-6-primary-db'].ansible_host }}/32          scram-sha-256    
      host replication   syncuser       192.168.10.16/32           scram-sha-256
      host replication   syncuser       {{ hostvars['vm-7-standby-db'].ansible_host }}/32          scram-sha-256
      host replication   syncuser       192.168.10.17/32           scram-sha-256

    marker: "# {mark} Ansible managed block for PostgreSQL"
  notify: restart_postgresql
  tags:
    - primary_postgresql_setup_configuring_connect_permissions_dir_pg_hba_conf


# Configuring the wal_level in /etc/postgresql/14/main/postgresql.conf - Primary Postgresql
- name: Step 4 - Configuring the wal_level in /etc/postgresql/14/main/postgresql.conf - Primary Postgresql
  become: true
  become_user: postgres
  replace:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^#?\s*wal_level\s*=\s*\w+'
    replace: 'wal_level = replica'
  notify: restart_postgresql
  tags:
    - primary_postgresql_setup_configuring_wal_level_postgresql_conf


# Restarting the PostgreSQL service
- name: Step 5 - Restarting the PostgreSQL service
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: restarted
  tags:
    - primary_postgresql_setup_restart_postgresql_service


# Creating the "wikiuser" user for the Primary PostgreSQL
- name: Step 6 - Creating the "wikiuser" user for the Primary PostgreSQL
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ postgres_wikiuser_user_vars.db_user }}"
    password: "{{ postgres_wikiuser_user_vars.db_user_password }}"
    role_attr_flags: "{{ postgres_wikiuser_user_vars.attr | join(',') }}"
    state: present
  notify: restart_postgresql
  tags:
    - primary_postgresql_setup_creating_user_wikiuser


# Creating the "syncuser" user for the Primary PostgreSQL
- name: Step 7 - Creating the "syncuser" user for the Primary PostgreSQL
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ postgres_replication_user_vars.db_user }}"
    password: "{{ postgres_replication_user_vars.db_user_password }}"
    role_attr_flags: "{{ postgres_replication_user_vars.attr | join(',') }}"
    state: present
  notify: restart_postgresql
  tags:
    - primary_postgresql_setup_creating_user_syncuser


# Checking if the database exists (and creating it if it doesn't)
- name: Step 8 - Checking if the database exists (and creating it if it doesn't)
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ postgres_vars.db_name }}"
    owner: "{{ postgres_wikiuser_user_vars.db_user }}"
    state: present
  tags:
    - primary_postgresql_setup_checking_postgresql_database_existsance

