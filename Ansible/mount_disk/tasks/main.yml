# tasks file for mount_disk


# Инфо:
# 
# 1. Отобразить инфо о дисках и разделах: lsblk -f
# 2. Разметка диска новыми разделами (partition): fdisk /dev/<название устройства>
# 2.1. fdisk /dev/vdb далее g (создание таблицы разделов gpt) далее w (сохр. изменения и выйти)
# 3. Создание раздела диска (partition) и physical volume вместе с ним: fdisk /dev/<название устройства>
# 3.1. fdisk /dev/vdb далее n (создание раздела) далее 1 (номер раздела) далее enter (вопрос про секторы) далее w (сохр. изменения и выйти)
# 4. Инициализация Physical Volume: pvcreate /dev/<название раздела>
# 4.1. pvcreate /dev/vdb1 
# 5. Создание Volume Group: vgcreate <имя группы томов> /dev/<имя раздела>
# 5.1. vgcreate vg-db-storage /dev/vdb1 (vgs - проверка, что VG создан)
# 6. Cоздание Logical Volume: lvcreate -n <имя LV> -l <кол-во extents (можно посмотреть vgdisplay <имя VG>)> <имя VG>
# lvcreate -n lv-vhdd-1-monitoring-system-db -l 7167 vg-db-storage (lvs - проверка, что LV создан)
# 7. Форматирование LV и создание файловой системы ext4
# mkfs.ext4 /dev/vg-db-storage/lv-vhdd-1-monitoring-system-db
# 8. Создание точки монтирования
# mkdir /opt/vhdd-1-monitoring-system-db/
# 9. Монтирование LV
# mount /dev/vg-db-storage/lv-vhdd-1-monitoring-system-db /opt/vhdd-1-monitoring-system-db/
# 10. Добавить LV в автомонтирование /etc/fstab (проверка автомонтирования cat /etc/fstab или mount -a)
# echo "/dev/vg-db-storage/lv-vhdd-1-monitoring-system-db /opt/vhdd-1-monitoring-system-db/ ext4 defaults 0 0" | sudo tee -a /etc/fstab



---

# Меняем имя ВМ, если имя в inventory.yaml отличается от фактического
- name: Change VM hostname
  shell: "echo {{ inventory_hostname }} > /etc/hostname"
  when: "inventory_hostname != ansible_hostname" 
  tags:
    - mount_external_disks_change_vm_hostname


# Получить имя диска по его id
- name: Get device_name based by disk_id
  set_fact:
    device_name: "{{ item.key }}"
  loop: "{{ ansible_facts.device_links.ids | dict2items }}"
  when: 
    - hostvars[inventory_hostname]['external_disks'] is defined
    - hostvars[inventory_hostname]['external_disks'] | length > 0
    - item.value | regex_search(disk_id)
  tags:
    - mount_external_disks_get_device_name_by_disk_id
    - mount_external_disks_create_disk_partition
    - mount_external_disks_create_pv_vg
    - mount_external_disks_create_lv
    - mount_external_disks_create_file_system
    - mount_external_disks_create_mount_dir
    - mount_external_disks_add_automount



# Создание раздела
# Проверка создания раздела "lsblk"
- name: Partition "{{ device_path }}" disk
  community.general.parted:
    device: "{{ device_path }}"
    number: 1
    flags: [ lvm ]
    label: "gpt"
    state: present
    part_end: "100%"
  when: device_name is defined
  tags:
    - mount_external_disks_create_disk_partition

# Создание Volume Group
# Проверка: "vgs"
- name: Task for PV and VG
  community.general.lvg:
      vg: "{{ volume_group }}"
      pvs: "{{ physical_volume }}"
  when: device_name is defined
  tags:
    - mount_external_disks_create_pv_vg

# Создание Logical Volume
# Проверка: "lvs"
- name: Logical volume - {{ logical_volume }} - with size
  community.general.lvol:
    vg: "{{ volume_group }}"
    lv: "{{ logical_volume }}"
    size: 100%FREE
  when: device_name is defined
  tags:
    - mount_external_disks_create_lv

# Форматирование раздела и создание файловой системы
# Проверка: "lsblk -f"
- name: Format the volume with "{{ file_system }}" fs
  community.general.filesystem:
    fstype: "{{ file_system }}"
    dev: "{{ vg_lv_path }}"
  when: device_name is defined
  tags:
    - mount_external_disks_create_file_system

# Создание директории для монтирования жеского диска
- name: Target directory under /opt/
  ansible.builtin.file:
    path: "{{ mount_point }}"
    state: directory
    mode: '0755'
  when: device_name is defined
  tags:
    - mount_external_disks_create_mount_dir

# Монтирование жеского диска
# Проверка, что жеский диск смонтирован "lsblk -f" 
# Проверка, что жесткий диск добавлен в автозагрузку "cat /etc/fstab"
# Проверка, что все файловые системы из "/etc/fstab" корректно монтируются: mount -a
- name: mount the lv on "{{ vg_lv_path }}"
  ansible.posix.mount:
    path: "{{ mount_point }}"
    src: "{{ vg_lv_path }}"
    fstype: "{{ file_system }}"
    state: mounted
  when: device_name is defined
  tags:
    - mount_external_disks_add_automount


