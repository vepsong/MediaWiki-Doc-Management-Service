---

# Retrieve the "disk_id" and prepend "virtio-"
- name: Step 1 - Retrieve the "disk_id" and prepend "virtio-"
  set_fact:
    virtio_disk_ids: "{{ virtio_disk_ids | default([]) + ['virtio-' + item.disk_id] }}"
  loop: "{{ hostvars[inventory_hostname].external_disks | default([]) }}"

# Compare with "ansible_facts.device_links.ids
- name: Step 2 - Compare with "ansible_facts.device_links.ids
  set_fact:
    device_names: "{{ device_names + [item.key] }}"
  loop: "{{ ansible_facts.device_links.ids | dict2items }}"
  when: item.value | intersect(virtio_disk_ids) | length > 0

# Create dynamic variables
- name: Step 3 - Create dynamic variables
  set_fact:
    device_path: "{{ device_path + [origin_path + item] }}"
    logical_volume: "{{ hostvars[inventory_hostname]['external_disks'] | map(attribute='disk_name') | map('regex_replace', '^', 'lv-') | list }}"
    physical_volume: "{{ physical_volume + ([origin_path + item] | map('regex_replace', '$', '1')) }}"
    volume_group: "{{ hostvars[inventory_hostname]['external_disks'] | map(attribute='disk_name') | map('regex_replace', '^', 'vg-db-storage-') | list }}"
    mount_point: "{{ hostvars[inventory_hostname]['external_disks'] | map(attribute='mount_point') | list }}"
  loop: "{{ device_names }}"


# Unmounting the hard drive from "mount_point"
- name: Step 4 - Unmounting the hard drive from "{{ mount_point }}"
  ansible.posix.mount:
    path: "{{ item }}"  # mount_point
    state: unmounted
  loop: "{{ mount_point }}"
  when: device_names is defined
  tags:
    - unmount_external_disks_remove_automount


# Deleting the Logical Volume - "logical_volume"
- name: Step 5 - Deleting the Logical Volume - "{{ logical_volume }}"
  community.general.lvol:
    vg: "{{ volume_group[item] }}"
    lv: "{{ logical_volume[item] }}"
    state: absent
    force: true
  when: device_names is defined
  loop: "{{ range(0, volume_group | length) | list }}"
  tags:
    - unmount_external_disks_remove_lv


# Deleting the Volume Group - "volume_group"
- name: Step 6 - Deleting the Volume Group - "{{ volume_group }}"
  community.general.lvg:
    vg: "{{ item }}"
    state: absent
  when: device_names is defined
  loop: "{{ volume_group }}"
  tags:
    - unmount_external_disks_remove_vg


# Deleting partitiion "device_path" disk
- name: Step 7 - Deleting partitiion "{{ device_path }}" disk
  community.general.parted:
    device: "{{ item }}"
    number: 1
    state: absent
  when: device_names is defined
  loop: "{{ device_path }}"
  tags:
    - unmount_external_disks_remove_disk_partition

