---
# tasks file for mediawiki

# =========================
# Блок с общими задачами
# =========================

# Добавление секретных переменных
- name: Step 1 - Include secret variables
  include_vars: secrets.yml
  tags:
    - setup_mediawiki_add_secret_variables


# Обновление пакетного репозитория 
- name: Step 2 - Update list of packages
  apt:
    update_cache: yes
  become: yes
  tags:
    - setup_mediawiki_apt_update

# Установка пакетов
- name: Step 3 - Install packages
  become: true
  become_user: root
  apt:
    name: "{{ item }}" 
    state: present
  loop:
    - "{{ packages_to_install }}"
  tags:
    - setup_mediawiki_install_packages 


# Запуск сервиса nginx и добавление в автозапуск
- name: Step 4 - Start and enable nginx services
  become: true
  become_user: root
  service: 
    name=nginx
    state=started 
    enabled=yes
  tags:
    - setup_mediawiki_start_enable_nginx_service

# Запуск сервиса postgresql и добавление в автозапуск
- name: Step 5 - Start and enable postgresql services
  become: true
  become_user: root
  service: 
    name=postgresql
    state=started 
    enabled=yes
  tags:
    - setup_mediawiki_start_enable_postgresql_service


# # Копирование конфигурационного файла nginx в /etc/nginx/sites-available/nginx_mediawiki 
# - name: Step 6 - Copy nginx configuration file to /etc/nginx/sites-available/nginx_mediawiki  
#   become: true
#   become_user: root
#   copy:
#     src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_1.nginx_conf_name }}" 
#     dest: /etc/nginx/sites-available/
#   notify: restart_nginx
#   tags:
#     - setup_mediawiki_copy_nginx_configuration_file

# # Создание symlink (символической ссылки) из /etc/nginx/sites-available/mediawiki в /etc/nginx/sites-enabled/mediawiki
# - name: Step 7 - Symlink creation for Nginx mediawiki conf file to /etc/nginx/sites-enabled/mediawiki
#   become_user: root
#   become: true
#   ansible.builtin.file:
#     src: "/etc/nginx/sites-available/{{ vm_4_mediawiki_server_1.nginx_conf_name }}"
#     dest: "/etc/nginx/sites-enabled/{{ vm_4_mediawiki_server_1.nginx_conf_name }}"
#     state: link
#   notify: restart_nginx
#   tags:
#     - setup_mediawiki_symlink_creation_mediawiki


# =======================================
# Блок с задачами vm-3-mediawiki-server-1
# =======================================


# Копирование конфигурационного файла nginx в /etc/nginx/sites-available/nginx_mediawiki 
- name: Step 6 - Copy nginx configuration file to /etc/nginx/sites-available/nginx_mediawiki  
  become: true
  become_user: root
  copy:
    src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_1.nginx_conf_name }}" 
    dest: /etc/nginx/sites-available/
  notify: restart_nginx
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_copy_nginx_configuration_file
    - setup_mediawiki_add_secret_variables, setup_mediawiki_copy_nginx_configuration_file

# Создание symlink (символической ссылки) из /etc/nginx/sites-available/mediawiki в /etc/nginx/sites-enabled/mediawiki
- name: Step 7 - Symlink creation for Nginx mediawiki conf file to /etc/nginx/sites-enabled/mediawiki
  become_user: root
  become: true
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ vm_4_mediawiki_server_1.nginx_conf_name }}"
    dest: "/etc/nginx/sites-enabled/{{ vm_4_mediawiki_server_1.nginx_conf_name }}"
    state: link
  notify: restart_nginx
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_symlink_creation_mediawiki
    - setup_mediawiki_add_secret_variables, setup_mediawiki_symlink_creation_mediawiki

# Скачивание архива с MediaWiki в /var/www/
- name: Step 8 - Download MediaWiki archive to /var/www/
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_1.user }}"
  ansible.builtin.get_url:
    url: "{{ vm_4_mediawiki_server_1.mediawiki_download_link }}"
    dest: "{{ vm_4_mediawiki_server_1.mediawiki_parent_path }}"
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_download_mediaWiki_archive
    - setup_mediawiki_add_secret_variables, setup_mediawiki_download_mediaWiki_archive

# Распаковка архива c MediaWiki в /var/www/
- name: Step 9 - Unzip MediaWiki archive to /var/www/
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_1.user }}"
  ansible.builtin.unarchive:
    src: "{{ vm_4_mediawiki_server_1.mediawiki_parent_path }}{{ vm_4_mediawiki_server_1.mediawiki_archive_name }}"
    dest: "{{ vm_4_mediawiki_server_1.mediawiki_parent_path }}"
    remote_src: yes
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_unzip_mediaWiki_archive
    - setup_mediawiki_add_secret_variables, setup_mediawiki_unzip_mediaWiki_archive

# Переименование разархивированной паки c MediaWiki в /var/www/mediawiki
- name: Step 10 - Rename unzipped folder to /var/www/mediawiki
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_1.user }}"
  ansible.builtin.command:
    cmd: "mv {{ vm_4_mediawiki_server_1.mediawiki_parent_path }}{{ vm_4_mediawiki_server_1.mediawiki_unzipped_folder_name }} {{ vm_4_mediawiki_server_1.mediawiki_path }}"
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_rename_unzipped_mediaWiki_archive
    - setup_mediawiki_add_secret_variables, setup_mediawiki_rename_unzipped_mediaWiki_archive

# Удаление архива с MediaWiki из /var/www/mediawiki-1.42.3.tar.gz
- name: Step 11 - Remove MediaWiki archive from /var/www/mediawiki-1.42.3.tar.gz
  ansible.builtin.file:
    path: "{{ vm_4_mediawiki_server_1.mediawiki_parent_path }}{{ vm_4_mediawiki_server_1.mediawiki_archive_name }}"
    state: absent
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_remove_mediaWiki_archive


# Немедленный перезапуск сервиса Nginx
- name: Step 12 - Restart Nginx service immediately
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_1.user }}"
  systemd:
    name: nginx
    state: restarted
  when: mediawiki_hosts.server1 in inventory_hostnam
  tags:
    - setup_mediawiki_restart_nginx
    - setup_mediawiki_add_secret_variables, setup_mediawiki_restart_nginx

# Копирование LocalSettings.php в /var/www/mediawiki
- name: Step 13 - Copy LocalSettings.php в /var/www/mediawiki
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_1.user }}"
  copy:
    src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_1.mediawiki_local_settings_file_name }}"   
    dest: "{{ vm_4_mediawiki_server_1.mediawiki_path }}"
  when: mediawiki_hosts.server1 in inventory_hostname
  tags:
    - setup_mediawiki_copy_localsettings_php_to_mediawiki
    - setup_mediawiki_add_secret_variables, setup_mediawiki_copy_localsettings_php_to_mediawiki



# =======================================
# Блок с задачами vm-4-mediawiki-server-2
# =======================================

# Установка pip3 пакетов
- name: Step 14 - Install pip3 packages
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  ansible.builtin.pip:
    name: "{{ item }}" 
    state: present
    executable: pip3
  loop: "{{ pip3_packages_to_install }}"
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_install_pip3_packages
    - setup_mediawiki_add_secret_variables, setup_mediawiki_install_pip3_packages

# Создание директории /scripts, в которой будут хранится скрипты для rsync папки mediawiki
- name: Step 15 - Create directory /scripts for scripts on vm-4-mediawiki-server-2
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  ansible.builtin.file:
    path: "{{ vm_4_mediawiki_server_2.scripts_path }}"
    state: directory
    mode: '0755'
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_create_path_for_scripts_folder
    - setup_mediawiki_add_secret_variables, setup_mediawiki_create_path_for_scripts_folder

# Cоздание пустого файла .env для дальнейшего наполнения значениями из secrets.yml
- name: Step 16 - Create .env file in /scripts on vm-4-mediawiki-server-2
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  ansible.builtin.file:
    path: "{{ vm_4_mediawiki_server_2.env_path }}"
    state: touch
    mode: '0644'
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_create_env_file
    - setup_mediawiki_add_secret_variables, setup_mediawiki_create_env_file

# Копирование скрипта archive_remote_rsync.py в /scripts с правами на исполнение
- name: Step 17 - Copy archive_remote_rsync.py to /scripts on vm-4-mediawiki-server-2
  copy:
    src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_2.remote_rsync_script_name }}" 
    dest: "{{ vm_4_mediawiki_server_2.scripts_path }}"
    mode: '0755'
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_copy_archive_remote_rsync_py_to_scripts

# Наполнение .env
- name: Step 18 - Fill up .env
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  blockinfile:
    path: "{{ vm_4_mediawiki_server_2.env_path }}"
    block: |
      BACKUPS_DIR="{{ postgres_vars.db_backups_dir }}"
      DATABASE_USER={{ postgres_wikiuser_user_vars.db_user }}
      DATABASE_PASSWORD={{ postgres_wikiuser_user_vars.db_user_password }}
      DATABASE_NAME={{ postgres_vars.db_name }}
      DATABASE_PORT={{ postgres_vars.db_port }}
      REMOTE_HOST={{ vm_7_standby_db_private_key_ssh.remote_host }}
      REMOTE_USER={{ vm_7_standby_db_private_key_ssh.remote_user }}
      PRIVATE_KEY_PATH={{ vm_7_standby_db_private_key_ssh.private_key_ssh_path }}

    marker: "# {mark} Ansible managed block for .env"
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_fill_up_env
    - setup_mediawiki_add_secret_variables, setup_mediawiki_fill_up_env


# Копирование private ssh-key в ~/.ssh
# Изменение разрешений на запуск private ssh-key
- name: Step 19 - Copy Private ssh-key to ~/.ssh
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  copy:
    src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_2.private_key_ssh_name}}"
    dest: "{{ vm_4_mediawiki_server_2.private_key_ssh_parent_path }}"
    mode: '600'
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_copy_private_ssh_key_to_server2
    - setup_mediawiki_add_secret_variables, setup_mediawiki_copy_private_ssh_key_to_server2


# Копирование файла конфигурации /etc/logrotate.d/archive_remote_rsync
# Управление файлами логов в /scripts/archive_remote_rsync.log
# Команда для принудительного запуска logrotate - logrotate -f /etc/logrotate.conf
- name: Step 20 - Copy logrotate to /etc/logrotate.d/archive_remote_rsync
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  copy:
    src: "{{ role_path }}/files/{{ vm_4_mediawiki_server_2.logrotate_conf_name }}"
    dest: "/etc/logrotate.d/{{ vm_4_mediawiki_server_2.logrotate_conf_name }}"
  when: db_hosts.standby in inventory_hostname
  tags:
    - setup_mediawiki_copy_logrotate
    - setup_mediawiki_add_secret_variables, setup_mediawiki_copy_logrotate

# Добавление archive_remote_rsync.py в планировшик задания cron
# minute: "0" - запуск в начале часа
# hour: "*/4" - запуск каждые 4 часа
- name: Step 21 - Run archive_remote_rsync.py script
  become: true
  become_user: "{{ secret_vm_4_mediawiki_server_2.user }}"
  ansible.builtin.cron:
    name: "Run pgdump script"
    minute: "*"
    hour: "*"
    job: "/usr/bin/python3 {{ vm_4_mediawiki_server_2.scripts_path }}/{{ vm_4_mediawiki_server_2.remote_rsync_script_name }} >> {{ vm_4_mediawiki_server_2.scripts_path }}/{{ vm_4_mediawiki_server_2.log_file_name }} 2>&1"
  notify: restart_cron
  when: mediawiki_hosts.server2 in inventory_hostname
  tags:
    - setup_mediawiki_run_archive_remote_rsync_cron
    - setup_mediawiki_add_secret_variables, setup_mediawiki_run_archive_remote_rsync_cron