---
# =========================================
# Block with Zabbix-Server PostgreSQL tasks
# =========================================

# Adding secret variables
- name: Step 1 - Adding secret variables
  include_vars: "{{ playbook_dir }}/common_files/ansible_secrets.yaml"
  tags:
    - zabbix_server_postgresql_setup_adding_secret_variables

# Creating dynamic variables
- name: Step 2 - Creating dynamic variables
  set_fact:
    mount_point: "{{ hostvars[inventory_hostname]['external_disks'] | map(attribute='mount_point') | list }}"
  tags:
    - zabbix_server_postgresql_setup_creating_dynamic_variables

# Stopping the PostgreSQL service
- name: Step 3 - Stopping the PostgreSQL service
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: stopped
  tags:
    - zabbix_server_postgresql_setup_stopping_postgresql_service


# Creating the /zabbix_dump directory, where db_dumps will be stored with '0755' permissions
# Owner: rwx (read, write, and execute)
# Group: r-x (read and execute)
# Others: r-x (read and execute)
- name: Step 4 - Creating the /zabbix_dump directory, where db_dumps will be stored with '0755' permissions
  become: true
  ansible.builtin.file:
    path: "{{ postgres_zabbix_server_vars.db_backups_dir }}"
    state: directory
    group: dbadmin
    mode: '0755'
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - zabbix_server_postgresql_setup_creating_zabbix_dump_directory


# Adding permissions to pg_hba.conf for connecting to the Zabbix-Server Postgresql
- name: Step 5 - Adding permissions to pg_hba.conf for connecting to the Zabbix-Server Postgresql
  become: true
  become_user: postgres
  blockinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    block: |
      host zabbix       zabbix       77.137.79.100/32                                                scram-sha-256
      host zabbix       zabbix       212.179.174.196/32                                              scram-sha-256
      host zabbix       zabbix       5.29.11.237/32                                                  scram-sha-256
      host zabbix       zabbix       {{ hostvars['vm-1-monitoring-system'].ansible_host }}/32        scram-sha-256
      host zabbix       zabbix       192.168.10.11/32                                                scram-sha-256

    marker: "# {mark} Ansible managed block for PostgreSQL"
  notify: restart_postgresql
  tags:
    - zabbix_server_postgresql_setup_configuring_connect_permissions_dir_pg_hba_conf



# Restarting the PostgreSQL service
- name: Step 6 - Restarting the PostgreSQL service
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: restarted
  tags:
    - zabbix_server_postgresql_setup_restart_postgresql_service


# Creating the "zabbix" user for the Zabbix-Server Postgresql
- name: Step 7 - Creating the "zabbix" user for the Zabbix-Server Postgresql
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ postgres_zabbix_server_user_vars.db_user }}"
    password: "{{ postgres_zabbix_server_user_vars.db_user_password }}"
    role_attr_flags: "{{ postgres_zabbix_server_user_vars.attr | join(',') }}"
    state: present
  notify: restart_postgresql
  tags:
    - zabbix_server_postgresql_setup_creating_user_zabbix



# Checking if the database exists (and creating it if it doesn't)
- name: Step 8 - Checking if the database exists (and creating it if it doesn't)
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ postgres_zabbix_server_vars.db_name }}"
    owner: "{{ postgres_zabbix_server_user_vars.db_user }}"
    state: present
  tags:
    - zabbix_server_postgresql_setup_checking_postgresql_database_existsance




# =============================================================
# Block with Zabbix-Server PostgreSQL tasks for creating a dump
# =============================================================

# Copying the pgdump_zabbix_server.py script to ~/scripts with '0755' permissions
# Owner: rwx (read, write, and execute)
# Group: r-x (read and execute)
# Others: r-x (read and execute)
- name: Step 9 - Copying the pgdump_zabbix_server.py script to ~/scripts with '0755' permissions
  become: true
  become_user: root
  copy:
    src: "{{ playbook_dir }}/common_files/zabbix/pgdump_zabbix_server.py"
    dest: /scripts/
    mode: '0755'
  tags:
    - zabbix_server_postgresql_setup_copy_pgdump_zabbix_server_py

# Filling the .env file with data
- name: Step 10 - Filling the .env file with data
  become: true
  become_user: root
  blockinfile:
    path: /scripts/.env
    block: |
      BACKUPS_DIR="{{ zabbix_postgresql_vars.db_backups_dir }}"
      DATABASE_USER={{ zabbix_postgresql_vars.db_user }}
      DATABASE_PASSWORD={{ zabbix_postgresql_vars.db_user_password }}
      DATABASE_NAME={{ zabbix_postgresql_vars.db_name }}
      DATABASE_PORT={{ zabbix_postgresql_vars.db_port }}

    marker: "# {mark} Ansible managed block for .env"
  tags:
    - zabbix_server_postgresql_setup_filling_env_data


# Copying the logrotate_pgdump_zabbix_server file to /etc/logrotate.d/
# Command for forcing logrotate to run: logrotate -f /etc/logrotate.conf
- name: Step 11 - Copying the logrotate_pgdump_zabbix_server file to /etc/logrotate.d/
  become: true
  become_user: root
  copy:
    src: "{{ playbook_dir }}/common_files/zabbix/logrotate_pgdump_zabbix_server"
    dest: /etc/logrotate.d/
  tags:
    - zabbix_server_postgresql_setup_logrotate_pgdump_zabbix_server
    

# Starting and enabling the logrotate service
- name: Step 12 - Starting and enabling the logrotate service
  service:
    name=logrotate
    state=started 
    enabled=yes
  tags:
    - zabbix_server_postgresql_setup_start_enable_logrotate_service



# Adding the execution of pgdump_zabbix_server.py to the cron job scheduler
# minute: '0' - run at the beginning of the hour
# hour: '*/4' - run every 4 hours"

- name: Step 13 - Adding the execution of pgdump_zabbix_server.py to the cron job scheduler
  become: true
  become_user: root
  ansible.builtin.cron:
    name: "Run pgdump_zabbix_server.py script"
    minute: "0"
    hour: "*/4"
    job: "/usr/bin/python3 /scripts/pgdump_zabbix_server.py >> /scripts/pgdump_zabbix_server.log 2>&1"
  notify: restart_cron
  tags:
    - zabbix_server_postgresql_setup_adding_execution_pgdump_zabbix_server_py_cron_job_scheduler





