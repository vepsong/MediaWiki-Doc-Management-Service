---
# tasks file for db_postgresql_zabbix_server

# Добавление секретных переменных
- name: Step 1 - Include secret variables
  include_vars: secrets.yml
  tags:
    - setup_db_postgresql_zabbix_server_add_secret_variables

# Создание динамических переменных
- name: Step 2 - Create dynamic variables
  set_fact:
    mount_point: "{{ hostvars[inventory_hostname]['external_disks'] | map(attribute='mount_point') | list }}"
  tags:
    - setup_db_postgresql_zabbix_server_create_dynamic_variables
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables

# Остановка сервиса PostgreSQL
- name: Step 3 - Stop PostgreSQL service immediately
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: stopped
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_stop_postgresql
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_stop_postgresql

# Проверка наличия mount point
- name: Step 4 - Check contents of the mount point
  become: true
  become_user: root
  command: ls -a {{ hostvars[inventory_hostname].external_disks[0].mount_point }}
  register: mount_point_contents
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_check_existance_mount_point
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_check_existance_mount_point


# Создание директории /zabbix_dump, в которой будут хранится dump'ы БД zabbix-server
- name: Step 5 - create /zabbix_dump for db zabbix-server dumps
  become: true
  ansible.builtin.file:
    path: "{{ postgres_zabbix_server_vars.db_backups_dir }}"
    state: directory
    group: dbadmin
    mode: '0755'
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_create_path_scripts
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_create_path_scripts


# Копирование текущей директории БД в mount point
- name: Step 6 - Copy current db_path to mount_point
  become: true
  become_user: root
  command: >
    cp -a /var/lib/postgresql/ {{ hostvars[inventory_hostname].external_disks[0].mount_point }}
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_current_db_path_to_mount_point
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_current_db_path_to_mount_point

# Создание архива с бэкапом
- name: Step 7 - Create a archive backup of the main directory
  become: true
  become_user: root
  command: >
    tar -czvf /var/lib/postgresql/14/main_{{ ansible_date_time.iso8601_basic }}.bak.tar.gz -C /var/lib/postgresql/14/ main
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_create_archive
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_create_archive


# Удаление старой директории
- name: Step 8 - Remove old main directory data
  become: true
  become_user: root
  command: rm -rf /var/lib/postgresql/14/main
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_remove_primary_db_old_path
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_remove_primary_db_old_path

# Настройка data_directory в /etc/postgresql/14/main/postgresql.conf в zabbix-server Postgresql
- name: Step 9 - Ensure data_directory is mount point in postgresql.conf in zabbix-server Postgresql
  become: true
  become_user: postgres
  replace:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^#?\s*data_directory\s*=\s*.*'
    replace: "data_directory = '{{ hostvars['vm-1-monitoring-system'].external_disks[0].mount_point }}/postgresql/14/main'"
  notify: restart_postgresql
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_add_data_directory_primary_on_postgresql_conf
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_add_data_directory_primary_on_postgresql_conf


# Добавление разрешений в pg_hba.conf на подключение к zabbix-server Postgresql
- name: Step 10 - Add entries to pg_hba.conf for zabbix-server Postgresql
  become: true
  become_user: postgres
  blockinfile:
    path: /etc/postgresql/14/main/pg_hba.conf
    block: |
      host zabbix        zabbix         77.137.79.100/32           scram-sha-256
      host zabbix        zabbix         212.179.174.196/32         scram-sha-256
      host zabbix        zabbix         5.29.11.237/32             scram-sha-256
      host zabbix        zabbix         {{ hostvars['vm-1-monitoring-system'].ansible_host }}/32          scram-sha-256
      # host replication   syncuser       77.137.79.100/32           scram-sha-256
      # host replication   syncuser       212.179.174.196/32           scram-sha-256
      # host replication   syncuser       {{ hostvars['vm-1-monitoring-system'].ansible_host }}/32          scram-sha-256

    marker: "# {mark} Ansible managed block for PostgreSQL"
  notify: restart_postgresql
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_add_ip_pg_hba_conf
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_add_ip_pg_hba_conf

# Настройка  listen_addresses в /etc/postgresql/14/main/postgresql.conf в zabbix-server Postgresql
- name: Step 11 - Ensure listen_addresses is set to '*' in postgresql.conf in zabbix-server Postgresql
  become: true
  become_user: postgres
  replace:
    path: /etc/postgresql/14/main/postgresql.conf
    regexp: '^#?\s*listen_addresses\s*=\s*.*'
    replace: "listen_addresses = '*'"
  notify: restart_postgresql
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_add_listen_addresses_primary_postgresql_conf
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_add_listen_addresses_primary_postgresql_conf

# # Настройка  wal_level в /etc/postgresql/14/main/postgresql.conf в zabbix-server Postgresql
# - name: Step 12 - Ensure wal_level is set to replica in postgresql.conf in zabbix-server Postgresql
#   become: true
#   become_user: postgres
#   replace:
#     path: /etc/postgresql/14/main/postgresql.conf
#     regexp: '^#?\s*wal_level\s*=\s*\w+'
#     replace: 'wal_level = replica'
#   notify: restart_postgresql
#   when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
#   tags:
#     - setup_db_postgresql_zabbix_server_add_wal_level_primary_postgresql_conf
#     - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_add_wal_level_primary_postgresql_conf


# Немедленный перезапуск сервиса PostgreSQL
- name: Step 13 - Restart PostgreSQL service immediately
  become: true
  become_user: root
  systemd:
    name: postgresql
    state: restarted
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_restart_postgresql
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_restart_postgresql


# Создание пользователя zabbix для zabbix-server Postgresql
- name: Step 14 - create user - zabbix - in zabbix-server Postgresql
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ postgres_zabbix_server_user_vars.db_user }}"
    password: "{{ postgres_zabbix_server_user_vars.db_user_password }}"
    role_attr_flags: "{{ postgres_zabbix_server_user_vars.attr | join(',') }}"
    state: present
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  notify: restart_postgresql
  tags:
    - setup_db_postgresql_zabbix_server_create_user_zabbix
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_create_user_zabbix



# Проверка существования БД (если ее нет, то создание)
- name: Step 15 - Ensure the PostgreSQL database is present
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ postgres_zabbix_server_vars.db_name }}"
    owner: "{{ postgres_zabbix_server_user_vars.db_user }}"
    state: present
  when: zabbix_server_hosts.zabbix_server1 in inventory_hostname
  tags:
    - setup_db_postgresql_zabbix_server_ensure_postgresql_db_is_presents
    - setup_db_postgresql_zabbix_server_add_secret_variables, setup_db_postgresql_zabbix_server_create_dynamic_variables, setup_db_postgresql_zabbix_server_ensure_postgresql_db_is_presents


